
# See LICENSE for license details.

# This file is automatically generated. Do not edit.

#*****************************************************************************
# vwmaccsu.vv_LMUL4SEW16.S
#-----------------------------------------------------------------------------
#
# Test vwmaccsu.vv insnructions.
# With LMUL=4, SEW=16
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV64UV

RVTEST_CODE_BEGIN


  li t0, -1
  vsetvli t1, t0, e16,m4,ta,ma
  la a2, tdat
  vle16.v v16, (a2)

  vsetvli t1, t0, e16,m8,ta,ma
  vle16.v v8, (a2)
  la a2, tdat+8

  vsetvli t1, t0, e16,m4,ta,ma
  vle16.v v24, (a2)

  
  li t0, 32
  vsetvli t1, t0, e16,m4,ta,ma
  vwmaccsu.vv v8, v16, v24

  li t0, -1
  vsetvli t1, t0, e16,m8,ta,ma
  la a1, res
  vse16.v v8, (a1)

  TEST_CASE(2, t0, 0x160003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(3, t0, 0x100070001, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(4, t0, 0x67ff8efffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(5, t0, 0x100000001efff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(6, t0, 0xfffff0000003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(7, t0, 0x70000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(8, t0, 0xfffff002efffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(9, t0, 0x1000000010000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(10, t0, 0x160003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(11, t0, 0x100070001, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(12, t0, 0x67ff8efffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(13, t0, 0x100000001efff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(14, t0, 0xfffff0000003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(15, t0, 0x70000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(16, t0, 0xfffff002efffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(17, t0, 0x1000000010000, ld t0, 0(a1); addi a1, a1, 8)


  li t0, -1
  vsetvli t1, t0, e16,m4,ta,ma
  la a2, tdat
  vle16.v v16, (a2)

  vsetvli t1, t0, e16,m8,ta,ma
  vle16.v v8, (a2)
  la a2, tdat+8

  vsetvli t1, t0, e16,m4,ta,ma
  vle16.v v24, (a2)

  
  li t0, 32
  vsetvli t1, t0, e16,m4,tu,ma
  vwmaccsu.vv v8, v16, v24

  li t0, -1
  vsetvli t1, t0, e16,m8,ta,ma
  la a1, res
  vse16.v v8, (a1)


  TEST_CASE(34, t0, 0x160003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(35, t0, 0x100070001, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(36, t0, 0x67ff8efffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(37, t0, 0x100000001efff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(38, t0, 0xfffff0000003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(39, t0, 0x70000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(40, t0, 0xfffff002efffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(41, t0, 0x1000000010000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(42, t0, 0x160003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(43, t0, 0x100070001, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(44, t0, 0x67ff8efffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(45, t0, 0x100000001efff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(46, t0, 0xfffff0000003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(47, t0, 0x70000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(48, t0, 0xfffff002efffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(49, t0, 0x1000000010000, ld t0, 0(a1); addi a1, a1, 8)


  li t0, -1
  vsetvli t1, t0, e16,m4,ta,ma
  la a2, tdat
  vle16.v v16, (a2)

  vsetvli t1, t0, e16,m8,ta,ma
  vle16.v v8, (a2)
  la a2, tdat+8

  vsetvli t1, t0, e16,m4,ta,ma
  vle16.v v24, (a2)

  
  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a3, mask
  vle8.v v0, (a3)

  li t0, 32
  vsetvli t1, t0, e16,m4,ta,ma
  vwmaccsu.vv v8, v16, v24, v0.t

  li t0, -1
  vsetvli t1, t0, e16,m8,ta,ma
  la a1, res
  vse16.v v8, (a1)


  TEST_CASE(66, t0, 0x10003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(67, t0, 0x100070001, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(68, t0, 0xffffefffefffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(69, t0, 0x100000001efff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(70, t0, 0x10003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(71, t0, 0x100070000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(72, t0, 0xffffefffefffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(73, t0, 0x1000000010000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(74, t0, 0x10003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(75, t0, 0x100070001, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(76, t0, 0xffffefffefffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(77, t0, 0x100000001efff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(78, t0, 0x10003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(79, t0, 0x100070000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(80, t0, 0xffffefffefffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(81, t0, 0x1000000010000, ld t0, 0(a1); addi a1, a1, 8)


  li t0, -1
  vsetvli t1, t0, e16,m4,ta,ma
  la a2, tdat
  vle16.v v16, (a2)

  vsetvli t1, t0, e16,m8,ta,ma
  vle16.v v8, (a2)
  la a2, tdat+8

  vsetvli t1, t0, e16,m4,ta,ma
  vle16.v v24, (a2)

  
  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a3, mask
  vle8.v v0, (a3)

  li t0, 32
  vsetvli t1, t0, e16,m4,ta,ma
  vwmaccsu.vv v8, v16, v24, v0.t

  li t0, -1
  vsetvli t1, t0, e16,m8,ta,ma
  la a1, res
  vse16.v v8, (a1)


  TEST_CASE(98, t0, 0x10003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(99, t0, 0x100070001, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(100, t0, 0xffffefffefffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(101, t0, 0x100000001efff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(102, t0, 0x10003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(103, t0, 0x100070000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(104, t0, 0xffffefffefffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(105, t0, 0x1000000010000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(106, t0, 0x10003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(107, t0, 0x100070001, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(108, t0, 0xffffefffefffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(109, t0, 0x100000001efff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(110, t0, 0x10003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(111, t0, 0x100070000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(112, t0, 0xffffefffefffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(113, t0, 0x1000000010000, ld t0, 0(a1); addi a1, a1, 8)


  li t0, -1
  vsetvli t1, t0, e16,m4,ta,ma
  la a2, tdat
  vle16.v v16, (a2)

  vsetvli t1, t0, e16,m8,ta,ma
  vle16.v v8, (a2)
  la a2, tdat+8

  vsetvli t1, t0, e16,m4,ta,ma
  vle16.v v24, (a2)

  
  li t0, 63
  vsetvli t1, t0, e16,m4,ta,ma
  vwmaccsu.vv v8, v16, v24

  li t0, -1
  vsetvli t1, t0, e16,m8,ta,ma
  la a1, res
  vse16.v v8, (a1)


  TEST_CASE(130, t0, 0x160003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(131, t0, 0x100070001, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(132, t0, 0x67ff8efffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(133, t0, 0x100000001efff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(134, t0, 0xfffff0000003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(135, t0, 0x70000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(136, t0, 0xfffff002efffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(137, t0, 0x1000000010000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(138, t0, 0x160003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(139, t0, 0x100070001, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(140, t0, 0x67ff8efffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(141, t0, 0x100000001efff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(142, t0, 0xfffff0000003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(143, t0, 0x70000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(144, t0, 0xfffff002efffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(145, t0, 0x1000000010000, ld t0, 0(a1); addi a1, a1, 8)


  li t0, -1
  vsetvli t1, t0, e16,m4,ta,ma
  la a2, tdat
  vle16.v v16, (a2)

  vsetvli t1, t0, e16,m8,ta,ma
  vle16.v v8, (a2)
  la a2, tdat+8

  vsetvli t1, t0, e16,m4,ta,ma
  vle16.v v24, (a2)

  
  li t0, 63
  vsetvli t1, t0, e16,m4,tu,ma
  vwmaccsu.vv v8, v16, v24

  li t0, -1
  vsetvli t1, t0, e16,m8,ta,ma
  la a1, res
  vse16.v v8, (a1)


  TEST_CASE(162, t0, 0x160003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(163, t0, 0x100070001, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(164, t0, 0x67ff8efffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(165, t0, 0x100000001efff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(166, t0, 0xfffff0000003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(167, t0, 0x70000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(168, t0, 0xfffff002efffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(169, t0, 0x1000000010000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(170, t0, 0x160003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(171, t0, 0x100070001, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(172, t0, 0x67ff8efffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(173, t0, 0x100000001efff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(174, t0, 0xfffff0000003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(175, t0, 0x70000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(176, t0, 0xfffff002efffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(177, t0, 0x1000000010000, ld t0, 0(a1); addi a1, a1, 8)


  li t0, -1
  vsetvli t1, t0, e16,m4,ta,ma
  la a2, tdat
  vle16.v v16, (a2)

  vsetvli t1, t0, e16,m8,ta,ma
  vle16.v v8, (a2)
  la a2, tdat+8

  vsetvli t1, t0, e16,m4,ta,ma
  vle16.v v24, (a2)

  
  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a3, mask
  vle8.v v0, (a3)

  li t0, 63
  vsetvli t1, t0, e16,m4,ta,ma
  vwmaccsu.vv v8, v16, v24, v0.t

  li t0, -1
  vsetvli t1, t0, e16,m8,ta,ma
  la a1, res
  vse16.v v8, (a1)


  TEST_CASE(194, t0, 0x10003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(195, t0, 0x100070001, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(196, t0, 0xffffefffefffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(197, t0, 0x100000001efff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(198, t0, 0x10003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(199, t0, 0x100070000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(200, t0, 0xffffefffefffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(201, t0, 0x1000000010000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(202, t0, 0x10003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(203, t0, 0x100070001, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(204, t0, 0xffffefffefffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(205, t0, 0x100000001efff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(206, t0, 0x10003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(207, t0, 0x100070000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(208, t0, 0xffffefffefffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(209, t0, 0x1000000010000, ld t0, 0(a1); addi a1, a1, 8)


  li t0, -1
  vsetvli t1, t0, e16,m4,ta,ma
  la a2, tdat
  vle16.v v16, (a2)

  vsetvli t1, t0, e16,m8,ta,ma
  vle16.v v8, (a2)
  la a2, tdat+8

  vsetvli t1, t0, e16,m4,ta,ma
  vle16.v v24, (a2)

  
  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a3, mask
  vle8.v v0, (a3)

  li t0, 63
  vsetvli t1, t0, e16,m4,ta,ma
  vwmaccsu.vv v8, v16, v24, v0.t

  li t0, -1
  vsetvli t1, t0, e16,m8,ta,ma
  la a1, res
  vse16.v v8, (a1)


  TEST_CASE(226, t0, 0x10003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(227, t0, 0x100070001, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(228, t0, 0xffffefffefffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(229, t0, 0x100000001efff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(230, t0, 0x10003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(231, t0, 0x100070000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(232, t0, 0xffffefffefffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(233, t0, 0x1000000010000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(234, t0, 0x10003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(235, t0, 0x100070001, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(236, t0, 0xffffefffefffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(237, t0, 0x100000001efff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(238, t0, 0x10003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(239, t0, 0x100070000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(240, t0, 0xffffefffefffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(241, t0, 0x1000000010000, ld t0, 0(a1); addi a1, a1, 8)


  li t0, -1
  vsetvli t1, t0, e16,m4,ta,ma
  la a2, tdat
  vle16.v v16, (a2)

  vsetvli t1, t0, e16,m8,ta,ma
  vle16.v v8, (a2)
  la a2, tdat+8

  vsetvli t1, t0, e16,m4,ta,ma
  vle16.v v24, (a2)

  
  li t0, 64
  vsetvli t1, t0, e16,m4,ta,ma
  vwmaccsu.vv v8, v16, v24

  li t0, -1
  vsetvli t1, t0, e16,m8,ta,ma
  la a1, res
  vse16.v v8, (a1)


  TEST_CASE(258, t0, 0x160003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(259, t0, 0x100070001, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(260, t0, 0x67ff8efffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(261, t0, 0x100000001efff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(262, t0, 0xfffff0000003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(263, t0, 0x70000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(264, t0, 0xfffff002efffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(265, t0, 0x1000000010000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(266, t0, 0x160003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(267, t0, 0x100070001, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(268, t0, 0x67ff8efffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(269, t0, 0x100000001efff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(270, t0, 0xfffff0000003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(271, t0, 0x70000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(272, t0, 0xfffff002efffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(273, t0, 0x1000000010000, ld t0, 0(a1); addi a1, a1, 8)


  li t0, -1
  vsetvli t1, t0, e16,m4,ta,ma
  la a2, tdat
  vle16.v v16, (a2)

  vsetvli t1, t0, e16,m8,ta,ma
  vle16.v v8, (a2)
  la a2, tdat+8

  vsetvli t1, t0, e16,m4,ta,ma
  vle16.v v24, (a2)

  
  li t0, 64
  vsetvli t1, t0, e16,m4,tu,ma
  vwmaccsu.vv v8, v16, v24

  li t0, -1
  vsetvli t1, t0, e16,m8,ta,ma
  la a1, res
  vse16.v v8, (a1)


  TEST_CASE(290, t0, 0x160003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(291, t0, 0x100070001, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(292, t0, 0x67ff8efffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(293, t0, 0x100000001efff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(294, t0, 0xfffff0000003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(295, t0, 0x70000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(296, t0, 0xfffff002efffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(297, t0, 0x1000000010000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(298, t0, 0x160003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(299, t0, 0x100070001, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(300, t0, 0x67ff8efffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(301, t0, 0x100000001efff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(302, t0, 0xfffff0000003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(303, t0, 0x70000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(304, t0, 0xfffff002efffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(305, t0, 0x1000000010000, ld t0, 0(a1); addi a1, a1, 8)


  li t0, -1
  vsetvli t1, t0, e16,m4,ta,ma
  la a2, tdat
  vle16.v v16, (a2)

  vsetvli t1, t0, e16,m8,ta,ma
  vle16.v v8, (a2)
  la a2, tdat+8

  vsetvli t1, t0, e16,m4,ta,ma
  vle16.v v24, (a2)

  
  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a3, mask
  vle8.v v0, (a3)

  li t0, 64
  vsetvli t1, t0, e16,m4,ta,ma
  vwmaccsu.vv v8, v16, v24, v0.t

  li t0, -1
  vsetvli t1, t0, e16,m8,ta,ma
  la a1, res
  vse16.v v8, (a1)


  TEST_CASE(322, t0, 0x10003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(323, t0, 0x100070001, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(324, t0, 0xffffefffefffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(325, t0, 0x100000001efff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(326, t0, 0x10003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(327, t0, 0x100070000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(328, t0, 0xffffefffefffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(329, t0, 0x1000000010000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(330, t0, 0x10003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(331, t0, 0x100070001, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(332, t0, 0xffffefffefffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(333, t0, 0x100000001efff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(334, t0, 0x10003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(335, t0, 0x100070000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(336, t0, 0xffffefffefffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(337, t0, 0x1000000010000, ld t0, 0(a1); addi a1, a1, 8)


  li t0, -1
  vsetvli t1, t0, e16,m4,ta,ma
  la a2, tdat
  vle16.v v16, (a2)

  vsetvli t1, t0, e16,m8,ta,ma
  vle16.v v8, (a2)
  la a2, tdat+8

  vsetvli t1, t0, e16,m4,ta,ma
  vle16.v v24, (a2)

  
  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a3, mask
  vle8.v v0, (a3)

  li t0, 64
  vsetvli t1, t0, e16,m4,ta,ma
  vwmaccsu.vv v8, v16, v24, v0.t

  li t0, -1
  vsetvli t1, t0, e16,m8,ta,ma
  la a1, res
  vse16.v v8, (a1)


  TEST_CASE(354, t0, 0x10003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(355, t0, 0x100070001, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(356, t0, 0xffffefffefffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(357, t0, 0x100000001efff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(358, t0, 0x10003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(359, t0, 0x100070000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(360, t0, 0xffffefffefffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(361, t0, 0x1000000010000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(362, t0, 0x10003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(363, t0, 0x100070001, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(364, t0, 0xffffefffefffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(365, t0, 0x100000001efff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(366, t0, 0x10003fff8, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(367, t0, 0x100070000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(368, t0, 0xffffefffefffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(369, t0, 0x1000000010000, ld t0, 0(a1); addi a1, a1, 8)




  TEST_PASSFAIL

RVTEST_CODE_END

  .data
RVTEST_DATA_BEGIN

res:
  .zero 528

tdat:
  .quad 0x10003fff8
  .quad 0x100070000
  .quad 0xffffefffefffffff
  .quad 0x1000000010000
  .quad 0x10003fff8
  .quad 0x100070000
  .quad 0xffffefffefffffff
  .quad 0x1000000010000
  .quad 0x10003fff8
  .quad 0x100070000
  .quad 0xffffefffefffffff
  .quad 0x1000000010000
  .quad 0x10003fff8
  .quad 0x100070000
  .quad 0xffffefffefffffff
  .quad 0x1000000010000
  .quad 0x10003fff8
  .quad 0x100070000
  .quad 0xffffefffefffffff
  .quad 0x1000000010000
  .quad 0x10003fff8
  .quad 0x100070000
  .quad 0xffffefffefffffff
  .quad 0x1000000010000
  .quad 0x10003fff8
  .quad 0x100070000
  .quad 0xffffefffefffffff
  .quad 0x1000000010000
  .quad 0x10003fff8
  .quad 0x100070000
  .quad 0xffffefffefffffff
  .quad 0x1000000010000
  .quad 0x10003fff8

mask:
  .quad 0x5555555555555555
  .quad 0x5555555555555555
  .quad 0x5555555555555555
  .quad 0x5555555555555555

RVTEST_DATA_END
